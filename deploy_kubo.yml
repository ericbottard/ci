<%
  KuboEnvironment = Struct.new(:name, :subnet_prefix, :region, :az)
  envs = [
    KuboEnvironment.new('pfsenv01', '10.0.31', 'us-central1', 'us-central1-c'),
    KuboEnvironment.new('pfsenv02', '10.0.32', 'us-west1', 'us-west1-b')
  ]


slack_notification="""
  on_success:
    do:
    - put: slack-alert
      params:
        channel: '#pfs-ops'
        text: |
          $BUILD_PIPELINE_NAME : $BUILD_JOB_NAME Passed
          https://ci.faas.to.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

  on_failure:
    do:
    - put: slack-alert
      params:
        channel: '#pfs-ops'
        text: |
          $BUILD_PIPELINE_NAME : $BUILD_JOB_NAME Failed
          https://ci.faas.to.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
"""

%>
---

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:

- name: slack-alert
  type: slack-notification
  source:
    url: ((slack-hook-url))

- name: gcs-kubo-deployment-tarball
  type: gcs
  source:
    json_key: ((gcp-json-key))
    bucket: kubo-public
    versioned_file: kubo-deployment-latest.tgz

- name: git-pfs-ci
  type: git
  source:
    uri: git@github.com:pivotal-cf/pfs-ci.git
    private_key: ((git-pfs-ci-ssh-key))
    branch: master

jobs:
<% envs.each do |env| %>
- name: deploy-kubo-<%= env.name %>
  serial: true
  serial_groups: [<%= env.name %>]

  plan:

  - aggregate:
    - get: git-pfs-ci
    - get: gcs-kubo-deployment-tarball

  - task: unpack-tgz
    file: git-pfs-ci/tasks/unpack-tgz.yml
    input_mapping:
      source_tarball: gcs-kubo-deployment-tarball
    params:
      SOURCE_TARBALL_REGEX: kubo-deployment-*.tgz
      COLLAPSE_DIR: kubo-deployment

  - task: tf-apply
    file: git-pfs-ci/tasks/tf-invoke.yml
    input_mapping:
      tf-source-dir: unpacked_dir
    params:
      COMMAND: apply
      SERVICE_ACCOUNT_EMAIL: ((pfs-gcp-ci-service-account-email))
      ENV_PREFIX: <%= env.name %>
      PROJECT_ID: ((pfs-gcp-ci-project))
      NETWORK_NAME: <%= env.name %>net
      REGION: <%= env.region %>
      AZ: <%= env.az %>
      SUBNET_IP_PREFIX: <%= env.subnet_prefix %>
      GOOGLE_CLOUD_KEYFILE_JSON: ((gcp-json-key))

  - task: deploy-bosh-and-k8s
    file: git-pfs-ci/tasks/deploy-kubo.yml
    params:
      ENV_PREFIX: <%= env.name %>
      PROJECT_ID: ((pfs-gcp-ci-project))
      NETWORK_NAME: <%= env.name %>net
      BOSH_CREDS: ((pfs-gcp-ci-bosh-creds-<%= env.name %>))
      AZ: <%= env.az %>
      GOOGLE_CLOUD_KEYFILE_JSON: ((gcp-json-key))
<%= slack_notification %>

- name: clean-<%= env.name %>
  serial: true
  serial_groups: [<%= env.name %>]

  plan:
  - aggregate:
    - get: git-pfs-ci

  - task: cleanup
    file: git-pfs-ci/tasks/clean-kubo.yml
    params:
      ENV_PREFIX: <%= env.name %>
      PROJECT_ID: ((pfs-gcp-ci-project))
      NETWORK_NAME: <%= env.name %>net
      AZ: <%= env.az %>
      REGION: <%= env.region %>
      GOOGLE_CLOUD_KEYFILE_JSON: ((gcp-json-key))
<%= slack_notification %>

<% end %>
