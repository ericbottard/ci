<%
  K8sEnvironment=Struct.new(
    :name,
    :lpass_name
  )

  RiffComponent=Struct.new(
  :name,
  :docker_image_name,
  :git_org_name,
  :git_repo_name,
  :build_task_file)

  riff_components = [
    RiffComponent.new('function-sidecar',     'function-sidecar',     'projectriff', 'function-sidecar',      'build-sidecar.yml'),
    RiffComponent.new('http-gateway',         'http-gateway',         'projectriff', 'http-gateway',          'build-http-gateway.yml'),
    RiffComponent.new('topic-controller',     'topic-controller',     'projectriff', 'topic-controller',      'build-topic-controller.yml'),
    RiffComponent.new('function-controller',  'function-controller',  'projectriff', 'function-controller',   'build-function-controller.yml'),

    RiffComponent.new(  'node-function-invoker',
                        'node-function-invoker',
                        'projectriff',
                        'node-function-invoker',
                        'build-node-function-invoker.yml'),

    RiffComponent.new(  'shell-function-invoker',
                        'shell-function-invoker',
                        'projectriff',
                        'shell-function-invoker',
                        'build-shell-function-invoker.yml'),

    RiffComponent.new(  'java-function-invoker',
                        'java-function-invoker',
                        'projectriff',
                        'java-function-invoker',
                        'build-java-function-invoker.yml'),
  ]

  charts_bucket_name='riff_charts'

  k8s_envs = [
    K8sEnvironment.new('kubo', 'pfs-gcp-kubeconfig-pfsenv01'),
    K8sEnvironment.new('gke', 'pfs-gcp-kubeconfig-gke-ci')
  ]
  slack_notification=""
#
# slack_notification="""
#   on_failure:
#     do:
#     - put: slack-alert
#       params:
#         channel: '#pfs-ops'
#         text: |
#           $BUILD_PIPELINE_NAME : $BUILD_JOB_NAME Failed
#           https://ci.faas.to.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
# """

%>

resource_types:
# - name: slack-notification
#   type: docker-image
#   source:
#     repository: cfcommunity/slack-notification-resource
#     tag: latest

- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:

- name: gcs-riff-charts
  type: gcs-resource
  source:
    bucket: <%= charts_bucket_name %>
    json_key: ((gcp-json-key))
    regexp: riff*tgz

- name: gcs-riff-chart-index
  type: gcs-resource
  source:
    bucket: <%= charts_bucket_name %>
    json_key: ((gcp-json-key))
    versioned_file: index.yaml

- name: gcs-riff-chart-latest-version
  type: gcs-resource
  source:
    bucket: <%= charts_bucket_name %>
    json_key: ((gcp-json-key))
    versioned_file: latest_version

<% riff_components.each do |component| %>
- name: <%= component.name %>-version
  type: semver
  source:
    driver: gcs
    bucket: riff_versions
    key: <%= component.name %>-version
    json_key: ((gcp-json-key))
<% end %>

#
# - name: slack-alert
#   type: slack-notification
#   source:
#     url: ((slack-hook-url))

#####################################################
# Git - Riff infra
#####################################################

<% riff_components.each do |component| %>
- name: git-<%= component.name %>
  type: git
  source:
    uri: https://github.com/<%= component.git_org_name %>/<%= component.git_repo_name %>.git
    #private_key: ((git-pfs-ci-ssh-key))
    #access_token: ((gitbot-access-token))
    branch: master
<% end %>

- name: git-riff
  type: git
  source:
    uri: https://github.com/projectriff/riff.git
    branch: master

- name: git-helm-charts
  type: git
  source:
    uri: https://github.com/projectriff/helm-charts.git
    branch: master

- name: git-kubernetes-model
  type: git
  source:
    uri: https://github.com/projectriff/kubernetes-model.git
    branch: riff

#####################################################
# Git - CI
#####################################################

- name: git-pfs-ci
  type: git
  source:
    uri: git@github.com:pivotal-cf/pfs-ci.git
    private_key: ((git-pfs-ci-ssh-key))
    branch: riff

- name: git-pfs-system-test
  type: git
  source:
    uri: git@github.com:pivotal-cf/pfs-system-test.git
    private_key: ((git-pfs-ci-ssh-key))
    branch: riff

#####################################################
# Docker images
#####################################################

<% riff_components.each do |component| %>
- name:  <%= component.name %>-docker-image
  type: docker-image
  source:
    repository: ((docker-riff-org))/<%= component.docker_image_name %>
    username: ((docker-riff-username))
    password: ((docker-riff-password))
<% end %>

#####################################################
# JOBS
#####################################################

jobs:

<% riff_components.each do |component| %>
- name: build-<%= component.name %>-container
  serial_groups: [<%= component.name %>]
  plan:
  - aggregate:
    - get: git-pfs-ci
    - get: git-<%= component.name %>
      trigger: true
    - get: <%= component.name %>-version
<% if component.name == 'function-controller' %>
    - get: git-kubernetes-model
<% end %>

  - task: build-<%= component.name %>
    file: git-pfs-ci/tasks/<%= component.build_task_file %>

  - put: <%= component.name %>-docker-image
    params:
      build: docker-context
      tag: docker-context/docker_version
      tag_as_latest: false
    <% if component.name == 'function-controller' %>
      build_args:
        JAR_FILE: "*.jar"
    <% end %>
<%= slack_notification %>
<% end %>

######################################################
# helm charts
######################################################

- name: build-riff-chart
  serial_groups: [riff]
  plan:
  - aggregate:
    - get: git-pfs-ci
    - get: git-helm-charts
  <% riff_components.each do |component| %>
    - get: <%= component.name %>-version
      passed:
      - build-<%= component.name %>-container
  <% end %>
  <% riff_components.each do |component| %>
    - get: git-<%= component.name %>
      trigger: true
      passed: [build-<%= component.name %>-container]
      params:
        depth: 1
  <% end %>
  - task: build-riff-chart
    file: git-pfs-ci/tasks/build-riff-chart.yml
    params:
      HELM_CHARTS_URL: "https://<%= charts_bucket_name %>.storage.googleapis.com"
  - put: gcs-riff-chart-latest-version
    params:
      file: helm-charts-latest-version/latest_version
      predefined_acl: publicRead
  - put: gcs-riff-charts
    params:
      file: helm-charts/*.tgz
      predefined_acl: publicRead
  - put: gcs-riff-charts
    params:
      file: helm-charts-install/*
      predefined_acl: publicRead
  - put: gcs-riff-chart-index
    params:
      file: helm-charts/index.yaml
      predefined_acl: publicRead
  - task: config-chart-bucket
    file: git-pfs-ci/tasks/config-chart-bucket.yml
    params:
      GOOGLE_CLOUD_KEYFILE_JSON: ((gcp-json-key))
      PROJECT_ID: ((pfs-gcp-ci-project))
      CHART_BUCKET_NAME: <%= charts_bucket_name %>
<%= slack_notification %>

<% k8s_envs.each do |k8s_env| %>
- name: clean-riff-pre-deploy-<%= k8s_env.name %>
  serial_groups: [riff-<%= k8s_env.name %>]
  plan:
  - aggregate:
    - get: gcs-riff-chart-latest-version
      passed: [build-riff-chart]
    - get: git-pfs-ci
  <% riff_components.each do |component| %>
    - get: <%= component.name %>-version
      passed: [build-riff-chart]
  <% end %>
    - get: gcs-riff-chart-index
      passed: [build-riff-chart]
      trigger: true

  - task: clean-riff-deployment
    file: git-pfs-ci/tasks/clean-riff-deployment.yml
    params:
      KUBECONFIG_STRING: ((<%= k8s_env.lpass_name %>))
<%= slack_notification %>

- name: deploy-riff-<%= k8s_env.name %>
  serial_groups: [riff-<%= k8s_env.name %>]
  plan:
  - aggregate:
    - get: gcs-riff-chart-latest-version
      passed: [clean-riff-pre-deploy-<%= k8s_env.name %>]
    - get: git-pfs-ci
  <% riff_components.each do |component| %>
    - get: <%= component.name %>-version
      passed: [clean-riff-pre-deploy-<%= k8s_env.name %>]
  <% end %>
    - get: gcs-riff-chart-index
      passed: [clean-riff-pre-deploy-<%= k8s_env.name %>]
      trigger: true

  - task: deploy-riff
    file: git-pfs-ci/tasks/deploy-riff.yml
    params:
      KUBECONFIG_STRING: ((<%= k8s_env.lpass_name %>))
      HELM_CHARTS_URL: "https://<%= charts_bucket_name %>.storage.googleapis.com"
<%= slack_notification %>

- name: run-riff-system-tests-<%= k8s_env.name %>
  serial_groups: [riff-<%= k8s_env.name %>]
  plan:
  - aggregate:
    - get: git-riff
    - get: gcs-riff-chart-latest-version
      passed: [deploy-riff-<%= k8s_env.name %>]
    - get: git-pfs-ci
  <% riff_components.each do |component| %>
    - get: <%= component.name %>-version
      passed: [deploy-riff-<%= k8s_env.name %>]
  <% end %>
    - get: gcs-riff-chart-index
      passed: [deploy-riff-<%= k8s_env.name %>]
      trigger: true
    - get: git-pfs-system-test

  - task: run-riff-system-tests
    privileged: true
    file: git-pfs-ci/tasks/run-riff-system-tests.yml
    params:
      KUBECONFIG_STRING: ((<%= k8s_env.lpass_name %>))
      DOCKER_ORG: ((docker-riff-org))
      DOCKER_USERNAME: ((docker-riff-username))
      DOCKER_PASSWORD: ((docker-riff-password))
<%= slack_notification %>

- name: clean-riff-post-deploy-<%= k8s_env.name %>
  serial_groups: [riff-<%= k8s_env.name %>]
  plan:
  - aggregate:
    - get: gcs-riff-chart-latest-version
      passed: [run-riff-system-tests-<%= k8s_env.name %>]
    - get: git-pfs-ci
  <% riff_components.each do |component| %>
    - get: <%= component.name %>-version
      passed: [run-riff-system-tests-<%= k8s_env.name %>]
  <% end %>
    - get: gcs-riff-chart-index
      passed: [run-riff-system-tests-<%= k8s_env.name %>]
      trigger: true

  - task: clean-riff-deployment
    file: git-pfs-ci/tasks/clean-riff-deployment.yml
    params:
      KUBECONFIG_STRING: ((<%= k8s_env.lpass_name %>))
<%= slack_notification %>
<% end %>

#
# Minkube
#
- name: deploy-and-test-riff-minikube
  serial_groups: [riff-minikube]
  plan:
  - aggregate:
    - get: git-riff
    - get: gcs-riff-chart-latest-version
      passed: [build-riff-chart]
    - get: git-pfs-ci
  <% riff_components.each do |component| %>
    - get: <%= component.name %>-version
      passed: [build-riff-chart]
  <% end %>
    - get: gcs-riff-chart-index
      passed: [build-riff-chart]
      trigger: true
    - get: git-pfs-system-test

  - task: deploy-and-test-riff
    file: git-pfs-ci/tasks/deploy-and-test-riff-in-minikube.yml
    privileged: true
    params:
      KUBECONFIG_STRING: ""
      HELM_CHARTS_URL: "https://<%= charts_bucket_name %>.storage.googleapis.com"
      DOCKER_ORG: ((docker-riff-org))
      DOCKER_USERNAME: ((docker-riff-username))
      DOCKER_PASSWORD: ((docker-riff-password))
<%= slack_notification %>

- name: bump-versions
  serial_groups: [riff]
  plan:
  - aggregate:
    - get: git-pfs-ci
  <% riff_components.each do |component| %>
    - get: <%= component.name %>-version
      passed:   <%= (k8s_envs.map {|k8s_env| "clean-riff-post-deploy-" + k8s_env.name }).concat(["deploy-and-test-riff-minikube"]) %>
  <% end %>
    - get: gcs-riff-chart-index
      passed:   <%= (k8s_envs.map {|k8s_env| "clean-riff-post-deploy-" + k8s_env.name }).concat(["deploy-and-test-riff-minikube"]) %>
      trigger: true

  <% riff_components.each do |component| %>
  - put: <%= component.name %>-version
    params: {pre: build}
  <% end %>
<%= slack_notification %>

- name: manual-publish-crds
  plan:
  - aggregate:
    - get: git-helm-charts

<% k8s_envs.each do |k8s_env| %>
  - task: publish-crds-<%= k8s_env.name %>
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: sk8s/faas-build
      inputs:
      - name: git-helm-charts

      params:
        KUBECONFIG_STRING: ((<%= k8s_env.lpass_name %>))

      run:
        path: /bin/sh
        args:
        - -o
        - pipefail
        - -exc
        - |

          mkdir -p ~/.kube
          echo "$KUBECONFIG_STRING" > ~/.kube/config

          cat git-helm-charts/templates/function-resource.yaml | grep -v '{{' > function-resource.yaml
          cat git-helm-charts/templates/topic-resource.yaml | grep -v '{{' > topic-resource.yaml

          kubectl apply -f function-resource.yaml
          kubectl apply -f topic-resource.yaml
<% end %>


<% riff_components.each do |component| %>
- name: manual-version-bump-build-<%= component.name %>
  plan:
  - put: <%= component.name %>-version
    params: {bump: patch, pre: build}
#
# - name: manual-release-<%= component.name %>
#   plan:
#   - aggregate:
#     - get: git-pfs-ci
#     - get: git-<%= component.name %>
#     - get: <%= component.name %>-version
#
#   - task: release-<%= component.name %>
#     file: git-pfs-ci/tasks/release_sk8s_component.yml
#     input_mapping:
#       component-version: <%= component.name %>-version
#       git-component-working-copy: git-<%= component.name %>
#     params:
#       SK8S_COMPONENT_GIT_REMOTE: git@github.com:<%= component.git_org_name %>/<%= component.git_repo_name %>.git
#
#   - put: git-<%= component.name %>
#     params:
#       tag: version-to-tag-git/version
#       repository: git-<%= component.name %>
#
#   - task: tag-<%= component.name %>-docker-image
#     file: git-pfs-ci/tasks/tag_docker_image.yml
#     input_mapping:
#       component-version: <%= component.name %>-version
#       git-component-working-copy: git-<%= component.name %>
#     params:
#       DOCKERHUB_ORG: ((docker-riff-org))
#       DOCKERHUB_USERNAME: ((docker-riff-username))
#       DOCKERHUB_PASSWORD: ((docker-riff-password))
#       DOCKER_IMAGE: ((docker-riff-org))/<%= component.docker_image_name %>
#       TAG_FILE: version-to-tag-git/version


<%= slack_notification %>
<% end %>
