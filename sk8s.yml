<%
  charts_bucket_name='sk8s_charts'

  DockerImage = Struct.new(:path, :name)
  sk8s_docker_images = [
    DockerImage.new('event-dispatcher', 'sk8s/event-dispatcher'),
    DockerImage.new('function-invokers/java-function-invoker','sk8s/java-function-invoker'),
    DockerImage.new('function-invokers/node-function-invoker','sk8s/node-function-invoker'),
    #DockerImage.new('function-invokers/python2-function-invoker', 'sk8s/python2-function-invoker'),
    DockerImage.new('function-invokers/shell-function-invoker', 'sk8s/shell-function-invoker'),
    DockerImage.new('function-sidecar','sk8s/function-sidecar'),
    DockerImage.new('topic-controller','sk8s/topic-controller'),
    DockerImage.new('topic-gateway','sk8s/topic-gateway'),
    DockerImage.new('zipkin-server', 'sk8s/zipkin-server')
  ]

slack_notification="""
  on_success:
    do:
    - put: slack-alert
      params:
        channel: '#pfs-ops'
        text: |
          $BUILD_PIPELINE_NAME : $BUILD_JOB_NAME Passed
          https://ci.faas.to.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

  on_failure:
    do:
    - put: slack-alert
      params:
        channel: '#pfs-ops'
        text: |
          $BUILD_PIPELINE_NAME : $BUILD_JOB_NAME Failed
          https://ci.faas.to.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
"""

%>

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:

- name: gcs-sk8s-charts
  type: gcs-resource
  source:
    bucket: <%= charts_bucket_name %>
    json_key: ((gcp-json-key))
    regexp: sk8s*tgz

- name: gcs-sk8s-chart-index
  type: gcs-resource
  source:
    bucket: <%= charts_bucket_name %>
    json_key: ((gcp-json-key))
    versioned_file: index.yaml

- name: sk8s-version
  type: semver
  source:
    driver: gcs
    bucket: pfs_versions
    key: sk8s_version
    json_key: ((gcp-json-key))

- name: slack-alert
  type: slack-notification
  source:
    url: ((slack-hook-url))

- name: git-go-sidecar
  type: git
  source:
    uri: https://github.com/ericbottard/function-sidecar.git
    branch: master

- name: git-go-http-gateway
  type: git
  source:
    uri: https://github.com/ericbottard/sk8s-http-gateway.git
    branch: master

- name: git-sk8s
  type: git
  source:
    uri: git@github.com:markfisher/sk8s.git
    private_key: ((git-pfs-ci-ssh-key))
    access_token: ((gitbot-access-token))
    branch: master

- name: git-kubernetes-model
  type: git
  source:
    uri: https://github.com/ericbottard/kubernetes-model
    branch: sk8s-sidecar-scaling

- name: git-pfs-ci
  type: git
  source:
    uri: git@github.com:pivotal-cf/pfs-ci.git
    private_key: ((git-pfs-ci-ssh-key))
    branch: master

- name: git-pfs-system-test
  type: git
  source:
    uri: git@github.com:pivotal-cf/pfs-system-test.git
    private_key: ((git-pfs-ci-ssh-key))
    branch: master

- name: go_sidecar_docker_image
  type: docker-image
  source:
    repository: ((docker-sk8s-org))/function-sidecar-go
    username: ((docker-sk8s-username))
    password: ((docker-sk8s-password))

- name: go_http_gateway_docker_image
  type: docker-image
  source:
    repository: ((docker-sk8s-org))/http-gateway
    username: ((docker-sk8s-username))
    password: ((docker-sk8s-password))

<% sk8s_docker_images.each do |image| %>
- name:  <%= image.name %>
  type: docker-image
  source:
    repository: <%= image.name %>
    username: ((docker-sk8s-username))
    password: ((docker-sk8s-password))
<% end %>

- name: gh-faas-cli-release
  type: github-release
  source:
    owner: pivotal-cf
    repository: faas-cli
    access_token: ((gitbot-access-token))

jobs:

- name: manual-version-bump-patch
  serial_groups: [sk8s]
  plan:
  - put: sk8s-version
    params: {bump: patch}

- name: build-go-sidecar
  serial_groups: [sk8s]
  plan:
  - aggregate:
    - get: git-pfs-ci
    - get: git-go-sidecar
      trigger: true
    - get: sk8s-version

  - task: build-go-sidecar
    file: git-pfs-ci/tasks/build-go-sidecar.yml

  - put: go_sidecar_docker_image
    params:
      build: go-sidecar-docker-context
      tag: go-sidecar-docker-context/sk8s_version
      tag_as_latest: true
<%= slack_notification %>

- name: build-go-http-gateway
  serial_groups: [sk8s]
  plan:
  - aggregate:
    - get: git-pfs-ci
    - get: git-go-http-gateway
      trigger: true
    - get: sk8s-version

  - task: build-go-http-gateway
    file: git-pfs-ci/tasks/build-go-http-gateway.yml

  - put: go_http_gateway_docker_image
    params:
      build: go-http-gateway-docker-context
      tag: go-http-gateway-docker-context/sk8s_version
      tag_as_latest: true
<%= slack_notification %>

- name: build-sk8s-containers
  serial_groups: [sk8s]
  plan:
  - aggregate:
    - get: git-pfs-ci
    - get: sk8s-version
    - get: git-sk8s
      trigger: true
    - get: git-kubernetes-model
      params:
        depth: 1

  - task: build-fabric8-model
    file: git-pfs-ci/tasks/build-fabric8-model.yml

  - task: build-sk8s-containers
    file: git-pfs-ci/tasks/build-sk8s-containers.yml
<% sk8s_docker_images.each do |image| %>
  - put:  <%= image.name %>
    params:
      build: sk8s-docker-contexts/<%= image.path %>
      tag: sk8s-docker-contexts/sk8s_version
      tag_as_latest: true
      build_args:
        JAR_FILE: '*.jar'
<% end %>
<%= slack_notification %>

- name: build-sk8s-chart
  serial_groups: [sk8s]
  plan:
  - aggregate:
    - get: git-pfs-ci
    - get: sk8s-version
      passed: [build-sk8s-containers]
    - get: git-sk8s
      trigger: true
      passed: [build-sk8s-containers]
  - task: build-sk8s-chart
    file: git-pfs-ci/tasks/build-sk8s-chart.yml
    params:
      SK8S_CHARTS_URL: "https://<%= charts_bucket_name %>.storage.googleapis.com"
  - put: gcs-sk8s-charts
    params:
      file: sk8s-charts/*.tgz
      predefined_acl: publicRead
  - put: gcs-sk8s-chart-index
    params:
      file: sk8s-charts/index.yaml
      predefined_acl: publicRead
  - task: config-chart-bucket
    file: git-pfs-ci/tasks/config-chart-bucket.yml
    params:
      GOOGLE_CLOUD_KEYFILE_JSON: ((gcp-json-key))
      PROJECT_ID: ((pfs-gcp-ci-project))
      CHART_BUCKET_NAME: <%= charts_bucket_name %>

<%= slack_notification %>

- name: clean-sk8s-pre-deployment
  serial_groups: [sk8s]
  plan:
  - aggregate:
    - get: git-pfs-ci
    - get: git-sk8s
      passed: [build-sk8s-chart]
    - get: sk8s-version
      passed: [build-sk8s-chart]
    - get: gcs-sk8s-chart-index
      passed: [build-sk8s-chart]
      trigger: true

  - task: clean-sk8s-deployment
    file: git-pfs-ci/tasks/clean-sk8s-deployment.yml
    params:
      KUBECONFIG_STRING: ((pfs-gcp-kubeconfig-pfsenv01))
      K8S_NS_PREFIX: pfs-ci
<%= slack_notification %>

- name: deploy-sk8s
  serial_groups: [sk8s]
  plan:
  - aggregate:
    - get: git-pfs-ci
    - get: git-sk8s
      passed: [clean-sk8s-pre-deployment]
    - get: sk8s-version
      passed: [clean-sk8s-pre-deployment]
    - get: gcs-sk8s-chart-index
      passed: [clean-sk8s-pre-deployment]
      trigger: true

  - task: deploy-sk8s
    file: git-pfs-ci/tasks/deploy-sk8s.yml
    params:
      KUBECONFIG_STRING: ((pfs-gcp-kubeconfig-pfsenv01))
      K8S_NS_PREFIX: pfs-ci
      SK8S_CHARTS_URL: "https://<%= charts_bucket_name %>.storage.googleapis.com"
<%= slack_notification %>

- name: run-sk8s-system-tests
  serial_groups: [sk8s]
  plan:
  - aggregate:
    - get: git-pfs-ci
    - get: git-sk8s
      passed: [deploy-sk8s]
    - get: sk8s-version
      passed: [deploy-sk8s]
    - get: gcs-sk8s-chart-index
      passed: [deploy-sk8s]
      trigger: true
    - get: git-pfs-system-test
    - get: gh-faas-cli-release

  - task: run-sk8s-system-tests
    privileged: true
    file: git-pfs-ci/tasks/run-sk8s-system-tests.yml
    params:
      KUBECONFIG_STRING: ((pfs-gcp-kubeconfig-pfsenv01))
      K8S_NS_PREFIX: pfs-ci
      DOCKER_ORG: sk8sci
      DOCKER_USERNAME: ((docker-sk8s-username))
      DOCKER_PASSWORD: ((docker-sk8s-password))
<%= slack_notification %>

- name: clean-sk8s-post-deployment
  serial_groups: [sk8s]
  plan:
  - aggregate:
    - get: git-pfs-ci
    - get: git-sk8s
      passed: [run-sk8s-system-tests]
    - get: sk8s-version
      passed: [run-sk8s-system-tests]
    - get: gcs-sk8s-chart-index
      passed: [run-sk8s-system-tests]
      trigger: true

  - task: clean-sk8s-deployment
    file: git-pfs-ci/tasks/clean-sk8s-deployment.yml
    params:
      KUBECONFIG_STRING: ((pfs-gcp-kubeconfig-pfsenv01))
      K8S_NS_PREFIX: pfs-ci

  - put: git-sk8s
    params:
      tag: sk8s-version/version
      repository: git-sk8s

  - put: sk8s-version
    params: {bump: patch}
<%= slack_notification %>

- name: manual-publish-crds
  plan:
  - aggregate:
    - get: git-sk8s

  - task: publish-crds
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: sk8s/faas-build
      inputs:
      - name: git-sk8s

      params:
        KUBECONFIG_STRING: ((pfs-gcp-kubeconfig-pfsenv01))

      run:
        path: /bin/sh
        args:
        - -o
        - pipefail
        - -exc
        - |

          mkdir -p ~/.kube
          echo "$KUBECONFIG_STRING" > ~/.kube/config

          cat git-sk8s/charts/sk8s/templates/function-resource.yaml | grep -v '{{' > function-resource.yaml
          cat git-sk8s/charts/sk8s/templates/topic-resource.yaml | grep -v '{{' > topic-resource.yaml

          kubectl apply -f function-resource.yaml
          kubectl apply -f topic-resource.yaml
