#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

build_root=$PWD

source "$build_root/git-pfs-ci/tasks/scripts/common.sh"
init_kubeconfig

RIFF_NAME=$(head "$build_root/gcs-riff-chart-latest-name/latest_name")
RIFF_VERSION=$(head "$build_root/gcs-riff-chart-latest-version/latest_version")

timestamp=$(date "+%s" | cut -c 5-10)

tiller_ns_name=$(generate_tiller_ns_name "$RIFF_NAME" "$RIFF_VERSION" "$timestamp")
riff_ns_name=$(generate_riff_ns_name "$RIFF_NAME" "$RIFF_VERSION" "$timestamp")
helm_release_name="${riff_ns_name}"

kubectl create ns "$tiller_ns_name"
kubectl create ns "$riff_ns_name"

helm init --tiller-namespace="$tiller_ns_name"

set +e
for i in {1..50}; do
  kubectl get pod -n "$tiller_ns_name" | grep Running | grep '1/1'
  if [ $? -eq 0 ]; then
      break
  fi
  sleep 5
done
set -e

# clear out existing CRDs; safe to do in non-prod
kubectl get customresourcedefinitions --all-namespaces -o json |
  jq -r  .items[].metadata.name |
  xargs -I{} kubectl delete customresourcedefinition {}

# deploy previously constructed helm chart
helm repo add riffrepo "$HELM_CHARTS_URL"
helm repo update riffrepo
helm search "$RIFF_NAME"

RND_HTTP_GW_EXTPORT=$(( ( RANDOM % 1000 )  + 40000 ))
DEPLOY_OVERRIDE="httpGateway.service.externalPort=${RND_HTTP_GW_EXTPORT}"

chart_version_reported=$(helm search riffrepo/"${RIFF_NAME}" | grep "${RIFF_VERSION}" | grep riffrepo/"${RIFF_NAME}" | awk '{print $2}')
if [ "$chart_version_reported" != "$RIFF_VERSION" ]; then
  echo "Detected chart version from Helm search [${chart_version_reported}] for [riffrepo/${RIFF_NAME}] does not match target [${RIFF_VERSION}]"
  exit 1
fi

chart_version_actual=$(helm inspect riffrepo/"${RIFF_NAME}" --version="${chart_version_reported}" | grep version | awk '{print $2}')
if [ "$chart_version_actual" != "$chart_version_reported" ]; then
  echo "Detected chart version from Helm inspect [${chart_version_actual}] for [riffrepo/${RIFF_NAME}] does not match target [${chart_version_actual}]"
  exit 1
fi

curl -sL "${HELM_CHARTS_URL}/${RIFF_NAME}-${chart_version_actual}-install-example.sh" > chart_install.sh
chmod +x  chart_install.sh
./chart_install.sh "riffrepo/${RIFF_NAME}" \
  --tiller-namespace="$tiller_ns_name" \
  --namespace="$riff_ns_name" \
  --name="$helm_release_name" \
  --set "${DEPLOY_OVERRIDE}"

set +e
for i in {1..50}; do
  kubectl get pod -n "$riff_ns_name" | grep http-gateway | grep Running | grep '1/1'
  if [ $? -eq 0 ]; then
      break
  fi
  sleep 5
done
set -e
